[
  {"keys": ["super+alt+]"], "command": "alignment"},
  {"keys": ["super+ctrl+w"], "command": "close_window"},
  {"keys": ["super+alt+w"], "command": "toggle_setting", "args": {"setting": "word_wrap"}},
  {"keys": ["ctrl+alt+["], "command": "fold"},
  {"keys": ["ctrl+alt+]"], "command": "unfold"},
  {"keys": ["ctrl+super+r"], "command": "reveal_in_side_bar"},
  {"keys": ["super+shift+w"], "command": "close_other_tabs"},
  {"keys": ["super+shift+r"], "command": "side_bar_rename"},
  {"keys": ["super+shift+m"], "command": "side_bar_move"},
  {"keys": ["super+l"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"}},

  {"keys": ["super+shift+l"], "command": "expand_selection", "args": {"to": "line"}},
  {"keys": ["super+shift+j"], "command": "split_selection_into_lines"},
  {"keys": ["ctrl+alt+up"], "command": "select_lines", "args": {"forward": false} },
  {"keys": ["ctrl+alt+down"], "command": "select_lines", "args": {"forward": true} },

  {"keys": ["super+k", "super+t"], "command": "title_case"},
  {"keys": ["super+k", "super+s"], "command": "swap_case"},
  {"keys": ["ctrl+shift+q"], "command": "change_quotes"},
  {"keys": ["ctrl+shift+i"], "command": "expand_selection_to_quotes"},
  {"keys": ["ctrl+e"], "command": "move_to", "args": {"to": "eol", "extend": false}},
  {"keys": ["ctrl+u"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete to BOL.sublime-macro"}},
  {"keys": ["ctrl+d"], "command": "right_delete"},
  {"keys": ["super+v"], "command": "paste_and_indent"},
  {"keys": ["super+shift+v"], "command": "paste"},
  {"keys": ["'"], "command": "insert_snippet", "args": {"contents": "\"${0:$SELECTION}\""}, "context":
    [
      {"key": "setting.auto_match_enabled", "operator": "equal", "operand": true},
      {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true}
    ]
  },
  {"keys": ["ctrl+shift+."], "command": "erb", "context":
    [
      {"key": "selector", "operator": "equal", "operand": "text.html.ruby, source.yaml, source.css, source.scss, source.js"}
    ]
  },

  { "keys": ["ctrl+alt+c"],
    "command": "sublime_highlight",
    "args": { "target": "clipboard",
              "output_type": "rtf"
  }},
  { "keys": ["alt+shift+space"], "command": "expand_selection", "args": {"to": "scope"} },

  // Windows Group
  { "keys": ["super+shift+1"], "command": "focus_group", "args": { "group": 0 } },
  { "keys": ["super+shift+2"], "command": "focus_group", "args": { "group": 1 } },
  { "keys": ["super+shift+["], "command": "focus_neighboring_group", "args": {"forward": false} },
  { "keys": ["super+shift+]"], "command": "focus_neighboring_group" },

  { "keys": ["super+shift+b"], "command": "anypreter" },
  { "keys": ["super+alt+n"], "command": "advanced_new_file"},
  // Spec Finder
  { "keys": ["super+."], "command": "toggle_spec"},
  // React/JSX
  {
    "keys": ["tab"],
    "command": "expand_abbreviation_by_tab",

    // put comma-separated syntax selectors for which
    // you want to expandEmmet abbreviations into "operand" key
    // instead of SCOPE_SELECTOR.
    // Examples: source.js, text.html - source
    "context": [
      {
        "operand": "source.js",
        "operator": "equal",
        "match_all": true,
        "key": "selector"
      },
      // run only if there's no selected text
      {
        "match_all": true,
        "key": "selection_empty"
      },
      // don't work if there are active tabstops
      {
        "operator": "equal",
        "operand": false,
        "match_all": true,
        "key": "has_next_field"
      },
      // don't work if completion popup is visible and you
      // want to insert completion with Tab. If you want to
      // expand Emmet with Tab even if popup is visible --
      // remove this section
      {
        "operand": false,
        "operator": "equal",
        "match_all": true,
        "key": "auto_complete_visible"
      },
      {
        "match_all": true,
        "key": "is_abbreviation"
      }
    ]
  }
]
